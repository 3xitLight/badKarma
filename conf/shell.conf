# BadKarma - Shell extension commands
#
# All the shell commands inside this configuration file
# must be inside a category.
# All the category are formed by service name, except for the hostlist one.
# 
# Before adding commands take a look at the available variables:
#
# 	variables
# 	----------
# 	$rhost - target host
# 	$rport - target port
# 	$domain - target hostname
# 	$wordlists - path to badkarma's wordlists
#	$scripts - path to badkarma's scripts
#	$outfile - path to save nmap scan
#	$banner - t<rget port's banner

[hostlist]
nmap_default = nmap -oX $outfile $rhost
nmap_intense_scan = nmap -T4 -A -v -oX $outfile $rhost
nmap_intense_scan_plus_udp = sudo nmap -sS -sU -T4 -A -v -oX $outfile $rhost
nmap_intense_scan_all_tcp = nmap -p 1-65535 -T4 -A -v -oX $outfile $rhost
nmap_intense_scan_no_ping = nmap -T4 -A -v -Pn -oX $outfile $rhost
nmap_ping_scan = nmap -sn -oX $outfile $rhost
nmap_scan_full_syn = nmap -Pn -sV -sC -A -p- -oX $outfile $rhost

nmap_full_tcp = nmap -Pn -sT -p- -A -oX $outfile $rhost
nmap_scan_udp = sudo nmap -sU -T4 -sC -oX $outfile $rhost
nmap_os_identify = sudo nmap -O -oX $outfile $rhost
nmap_traceroute_geolocate = sudo nmap --traceroute --script traceroute-geolocation.nse -oX $outfile $rhost 
nmap_dnsbrute = nmap --script dns-brute.nse -oX $outfile $domain
nmap_hostmap = nmap --script hostmap-bfk.nse -oX $outfile $rhost

nmap_vulners = nmap -sV --script=$scripts/vulners.nse -oX $outfile $rhost

masscan_full_tcp = sudo masscan -oX $outfile -p0-65535 --rate 10000 --banner $rhost

get-from-shodan = python3 $scripts/smap.py --out $outfile $rhost
get-geolocation = curl -vvv "http://www.geoplugin.net/json.gp?ip=$rhost" > $outfile

searchsploit = nmap -sV -sC $rhost -oX $outfile ; searchsploit --nmap $outfile 
metasploit_enum_dns = msfconsole -n -q -x "use auxiliary/gather/enum_dns; set DOMAIN $domain; run; exit;"

unicornscan_basic_scan = sudo unicornscan $rhost
unicornscan_tcp_scan = sudo unicornscan -mT $rhost
unicornscan_udp_scan = sudo unicornscan -mU $rhost

dnsrecon = dnsrecon -d $domain -D /usr/share/wordlists/dnsmap.txt -t std
dnsenum = dnsenum $domain -f $wordlists/subdomains.txt
sublist3r = sublist3r -d $domain
knockpy = knockpy $domain

whois_ip = whois $rhost
whois_domain = whois $domain

[generic]
ncat = ncat -v $rhost $rport
openssl_client = openssl s_client -connect $rhost:$rport
grab_banner = echo | nc -v -n -w1 $rhost $rport
searchsploit = nmap -sV -sC $rhost -p $rport -oX $outfile ; searchsploit --nmap $outfile 
sploitus = python3 $scripts/sploitus.py "$banner"

nmap_vulners = nmap -sV --script=$scripts/vulners.nse -p$rport -oX $outfile $rhost
nmap_grab_banner = nmap -sV --script=banner -oX $outfile -p$rport $rhost
nmap_default_scripts = nmap -sV -sC -oX $outfile -p$rport $rhost

masscan_grab_banner = sudo masscan -oX $outfile -p$rport --banner $rhost

[http]
scan_with_arachni = sudo arachni http://$rhost:$rport
scan_with_sqlmap = sqlmap --url=http://$rhost:$rport/ --keep-alive --crawl=10 --threads=5 --eta --batch --level=5 --risk=3 --banner --is-dba --dbs --tables -s /tmp/scan_report.txt --flush-session -t /tmp/scan_trace.txt --fresh-queries
scan_with_commix = commix --crawl=2 --url http://$rhost:$rport/
scan_with_skipfish = skipfish -o /tmp/skip http://$rhost:$rport
scan_with_wpscan = wpscan -e t,tt,u,p -r http://$rhost:$rport/
scan_with_joomscan = joomscan -u http://$rhost:$rport/
scan_with_nikto = nikto -h $rhost:$rport

whatweb = whatweb $rhost:$rport
wfuzz = wfuzz -c -u http://$rhost:$rport/FUZZ --hc 404 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt
dirb = dirb http://$rhost:$rport
wafw00f = wafw00f http://$rhost:$rport
httrack = httrack http://$rhost:$rport -O /tmp/httrack-$rhost:$rport
sslscan = sslscan --verbose --sni-name=$domain $rhost:$rport

gobuster_top1000_robots_disallowed = gobuster -e -u http://$rhost:$rport/ -w $wordlists/http/Top1000-RobotsDisallowed.txt
gobuster_top10000_robots_disallowed = gobuster -e -u http://$rhost:$rport/ -w $wordlists/http/Top10000-RobotsDisallowed.txt

dirsearch_default_iis = dirsearch --url http://$rhost:$rport/ -r -t 4 -e asp,aspx,htm,html,txt,sql,js,ashx
dirsearch_default_php = dirsearch --url http://$rhost:$rport/ -r -t 4 -e php,php5,php4,phtml,php7,htm,html,sql,js,txt
dirsearch_default_cgi = dirsearch --url http://$rhost:$rport/ -r -t 4 -e cgi,html,htm,sql,js,txt
dirsearch_junk_files = dirsearch --url http://$rhost:$rport/ -r -t 4 -e txt,rar,zip,7z,config,conf,pdf,sql,sqlite,dump

nmap_webdav_scan = nmap --script http-webdav-scan -oX $outfile -p$rport $rhost
nmap_userdir_enum= nmap -sV --script=http-userdir-enum -oX $outfile -p$rport $rhost
nmap_vhosts = nmap -sV --script=http-vhosts -oX $outfile -p$rport $rhost
nmap_waf_detect = nmap -sV --script=http-waf-detect -oX $outfile -p$rport $rhost
nmap_waf_fingerprint = nmap -sV --script=http-waf-fingerprint -oX $outfile -p$rport $rhost

metasploit_verb_bypass = msfconsole -n -q -x "use auxiliary/scanner/http/verb_auth_bypass; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_dir_listing = msfconsole -n -q -x "use auxiliary/scanner/http/dir_listing; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_cert = msfconsole -n -q -x "use auxiliary/scanner/http/cert; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_openproxy = msfconsole -n -q -x "use auxiliary/scanner/http/open_proxy; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_dirscanner = msfconsole -n -q -x "use auxiliary/scanner/http/dir_scanner; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_files_dit = msfconsole -n -q -x "use auxiliary/scanner/http/files_dir; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/http/http_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[telnet]
nmap_brute = nmap --script telnet-brute -oX $outfile -p$rport $rhost
metasploit_version = msfconsole -n -q -x "use auxiliary/scanner/telnet/telnet_version; set RHOSTS $rhost;set RPORT $rport; run; exit;"
metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/telnet/telnet_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_encrypt_overflow = msfconsole -n -q -x "use auxiliary/scanner/telnet/telnet_encrypt_overflow; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[ftp]
ftpclient = ftp $rhost $rport 
enum_users = perl $scripts/ftp-user-enum.pl -U $wordlists/users.txt -t $rhost
enum_user_inetutils = perl $scripts/ftp-user-enum.pl -M iu -U $wordlists/users.txt -t $rhost

nmap_brute = nmap --script ftp-brute -oX $outfile -p$rport $rhost
nmap_vsftpd_backdoor = nmap --script ftp-vsftpd-backdoor -oX $outfile -p$rport $rhost

metasploit_version = msfconsole -n -q -x "use auxiliary/scanner/ftp/ftp_version; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_anonymous = msfconsole -n -q -x "use auxiliary/scanner/ftp/anonymous; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[ssh]
connect-as-root = ssh root@$rhost -p $rport

nmap_brute = nmap --script ssh-brute -oX $outfile -p$rport $rhost
nmap_ssh_hostkey = nmap $rhost -p $rport -oX $outfile --script ssh-hostkey --script-args ssh_hostkey=all
nmap_ssh2_enum_algos = nmap --script ssh2-enum-algos -oX $outfile -p$rport $rhost

metasploit_enumusers = msfconsole -n -q -x "use auxiliary/scanner/ssh/ssh_enumusers; set RHOSTS $rhost; set RPORT $rport; set USER_FILE $wordlists/users.txt; run; exit;"
metasploit_version = msfconsole -n -q -x "use auxiliary/scanner/ssh/ssh_version; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[upnp]
nmap_info_tcp = nmap -p $rport -oX $outfile --script=upnp-info $rhost
nmap_info_udp = sudo nmap -sU -p $rport -oX $outfile --script=upnp-info $rhost

[domain]
nmap_service_discovery_tcp = nmap --script=dns-service-discovery -oX $outfile -p $rport $rhost
nmap_service_discovery_udp = sudo nmap -sU --script=dns-service-discovery -oX $outfile -p $rport $rhost

[netbios-ssn]
enum4linux = enum4linux $rhost
nbtscan = nbtscan $rhost
samrdump = python /usr/share/doc/python-impacket/examples/samrdump.py $rhost $rport/SMB
polenum = polenum $rhost
rpcclient_null_session = echo 'srvinfo' | rpcclient $rhost -U%

net_enum_domain_admins = net rpc group members "Domain Admins" -I $rhost -U%

nmap_brute = nmap -sV --script=smb-brute -p$rport -oX $outfile $rhost
nmap_enum_users = nmap --script smb-enum-users.nse -oX $outfile -p$rport $rhost
nmap_connection_flood = nmap --script smb-flood.nse -p$rport $rhost 

metasploit_pipe_auditor =  msfconsole -n -q -x "use auxiliary/scanner/smb/pipe_auditor; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_pipe_dcerpc_auditor = msfconsole -n -q -x "use auxiliary/scanner/smb/pipe_dcerpc_auditor; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enumshares = msfconsole -n -q -x "use auxiliary/scanner/smb/smb_enumshares; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enumeusers = msfconsole -n -q -x "use auxiliary/scanner/smb/smb_enumusers; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_lookupsid = msfconsole -n -q -x "use auxiliary/scanner/smb/smb_lookupsid; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_version = msfconsole -n -q -x "use auxiliary/scanner/smb/smb_version; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/smb/smb_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[pop3]
metasploit_version = msfconsole -n -q -x "use auxiliary/scanner/pop3/pop3_version; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[smtp]
smtp-user-enum_VRFY = smtp-user-enum -M VRFY -U $wordlists/users.txt -t $rhost -p $rport
smtp-user-enum_RCPT = smtp-user-enum -M RCPT -U $wordlists/users.txt -t $rhost -p $rport
smtp-user-enum_EXPN = smtp-user-enum -M EXPN -U $wordlists/users.txt -t $rhost -p $rport

nmap_brute = nmap -sV --script smtp-brute -p$rport -oX $outfile $rhost
nmap_commands = nmap -sV --script smtp-commands -oX $outfile -p$rport $rhost
nmap_enum_users = nmap --script smtp-enum-users.nse -oX $outfile -p$rport $rhost
nmap_open_relay = nmap --script smtp-open-relay.nse -oX $outfile -p$rport $rhost

metasploit_version = msfconsole -n -q -x "use auxiliary/scanner/smtp/smtp; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[snmp]
snmp-check = snmp-check -t $rhost -p $rport -c public
snmpwalk = snmpwalk -c public $rhost
onesixtyone = onesixtyone -c /usr/share/doc/onesixtyone/dict.txt $rhost
nmap_win32_users = nmap -sU -p$rport --script=snmp-win32-users -oX $outfile $rhost
nmap_brute = nmap -sU -p$rport --script snmp-brute -oX $outfile $rhost 
metasploit_enum = msfconsole -n -q -x "use auxiliary/scanner/snmp/snmp_enum; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum_shares = msfconsole -n -q -x "use auxiliary/scanner/snmp/snmp_enumshares; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum_users = msfconsole -n -q -x "use auxiliary/scanner/snmp/snmp_enumusers; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/snmp/snmp_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[ntp]
nmap_ntpinfo = sudo nmap -sU -p $rport --script ntp-info -oX $outfile $rhost 
nmap_ntp_monlist = sudo nmap -sU -p $rport --script ntp-monlist -oX $outfile $rhost 

[ldap]
ldapsearch = ldapsearch -h $rhost -p $rport -x -s base
nmap_brute = nmap -p$rport --script ldap-brute --script-args ldap.base='"cn=users,dc=cqure,dc=net"' -oX $outfile $rhost
nmap_rootdse = nmap -p$rport --script ldap-rootdse -oX $outfile $rhost

[rpcbind]
rpcinfo = rpcinfo -p $rhost

nmap_rpcinfo = nmap -sV --script=rpcinfo -oX $outfile -p$rport $rhost
nmap_rpc-grind = nmap -sV --script=rpc-grind --script-args 'rpc-grind.threads=8' -oX $outfile -p$rport $rhost

metasploit_rpcbomb = msfconsole -n -q -x "use auxiliary/dos/rpc/rpcbomb; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[vnc]
vncviewer = vncviewer $rhost:$rport

nmap_brute = nmap -sV --script=vnc-brute -oX $outfile -p$rport $rhost
nmap_realvnc_auth_bypass = nmap -sV --script=realvnc-auth-bypass -p$rport $rhost

metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/vnc/vnc_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_none_auth = msfconsole -n -q -x "use auxiliary/scanner/vnc/vnc_none_auth; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_realvnc_41_bypass = msfconsole -n -q -x "use auxiliary/admin/vnc/realvnc_41_bypass; set RHOST $rhost; set AUTOVNC true; set RPORT $rport; run; exit;"

[ms-wbt-server]
rdesktop = rdesktop $rhost:$rport
nmap_enum_encryption = nmap -p$rport -oX $outfile --script rdp-enum-encryption $rhost
nmap_vuln_ms12-020 = nmap -sV --script=rdp-vuln-ms12-020 -oX $outfile -p$rport $rhost

[ms-sql-m]
connect-as-sa = python /usr/share/doc/python-impacket/examples/mssqlclient.py -p $rport sa@$rhost

nmap_info = nmap -p$rport --script ms-sql-info --script-args mssql.instance-port=$rport -oX $outfile $rhost
nmap_brute = nmap -sV --script=ms-sql-brute -oX $outfile -p$rport $rhost
nmap_empty_password = nmap -sV --script=ms-sql-empty-password -oX $outfile -p$rport $rhost
nmap_ntlm_info = nmap -sV --script=ms-sql-ntlm-info -oX $outfile -p$rport $rhost
nmap_config = nmap -sV --script=ms-sql-config -oX $outfile -p$rport $rhost
nmap_dac = nmap -sV --script=ms-sql-dac -oX $outfile -p$rport $rhost

metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/mssql/mssql_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum = msfconsole -n -q -x "use auxiliary/admin/mssql/mssql_enum; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum_domain_accounts = msfconsole -n -q -x "use auxiliary/admin/mssql/mssql_enum_domain_accounts; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum_domain_accounts_sqli = msfconsole -n -q -x "use auxiliary/admin/mssql/mssql_enum_domain_accounts_sqli; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum_sql_logins = msfconsole -n -q -x "use auxiliary/admin/mssql/mssql_enum_sql_logins; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_exec = msfconsole -n -q -x "use auxiliary/admin/mssql/mssql_exec; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[mysql]
connect-as-root = mysql -u root -h $rhost --port=$rport -p

nmap_audit = nmap --script=mysql-audit -p$rport -oX $outfile $rhost
nmap_enum = nmap --script=mysql-enum -p$rport -oX $outfile $rhost
nmap_brute = nmap -sV --script=mysql-brute -oX $outfile -p$rport $rhost
nmap_empty_password = nmap -sV --script=mysql-empty-password -oX $outfile -p$rport $rhost
nmap_auth_bypass = nmap -sV --script=mysql-auth-bypass -p$rport -oX $outfile $rhost
nmap_users = nmap -sV --script=mysql-users -p$rport -oX $outfile $rhost
nmap_databases = nmap -sV --script=mysql-databases -p$rport -oX $outfile $rhost

metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/mysql/mysql_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_enum = msfconsole -n -q -x "use auxiliary/scanner/mysql/mysql_enum; set RHOSTS $rhost; set RPORT $rport; run; exit;"
metasploit_authbypass_hashdump = msfconsole -n -q -x "use auxiliary/scanner/mysql/mysql_authbypass_hashdump; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[oracle]
nmap_brute = nmap -sV --script=oracle-brute -p$rport -oX $outfile $rhost
nmap_brute_stealth = nmap -sV --script=oracle-brute-stealth -p$rport -oX $outfile $rhost
nmap_enum_users = nmap -sV --script=oracle-enum-users -p$rport -oX $outfile $rhost
nmap_sid_brute = nmap -sV --script=oracle-sid-brute -p$rport -oX $outfile $rhost
nmap_tns_version = nmap -sV --script=oracle-tns-version -p$rport -oX $outfile $rhost

[postgresql]
connect-as-postgres = psql -h $rhost -p $rport -U postgres

[finger]
enum_users = perl $scripts/finger-user-enum.pl -U $wordlists/users.txt -t $rhost

[auth]
enum_users = ident-user-enum $rhost $rport

[exec]
nmap_brute = nmap -p $rport --script rexec-brute -oX $outfile $rhost
metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/rservices/rexec_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"

[login]
connect-as-root = rlogin -l root $rhost
nmap_brute = nmap -p $rport --script rlogin-brute -oX $outfile $rhost
metasploit_login = msfconsole -n -q -x "use auxiliary/scanner/rservices/rexec_login; set RHOSTS $rhost; set RPORT $rport; run; exit;"
